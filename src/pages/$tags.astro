---
import Markdown from 'astro/components';
import Page from '../layouts/page.astro';
import BlogPreviewList from '../components/BlogPreviewList.astro'

let title = 'Posts by Tags';
let description = 'All the articles posted so far...';

export async function createCollection() {
  const allPosts = Astro.fetchContent('./post/*.md');
  const tags = new Set()
  allPosts.map(post => {
      post.tags && post.tags.map(tag => tags.add(tag.toLowerCase()))
  })

  return {
    paginate: true,
    route: `/tags/:tag?/:page?`,
    paths() {
      return Array.from(tags).map((tag, i) => ({params: { tag }}));
    },
    async props({ params, paginate }) {
      return {
          tag: params?.tag || 'all',
          collection: paginate(params.tag ? allPosts.filter((post) => post.tags.includes(params.tag)) : allPosts, { pageSize: 2 })
      }
    },
  };
}

const { collection, tag } = Astro.props;
---

<Page content={{ title, description, image: collection.data[0].image }}>
    <Markdown>
        This is a bunch of articles we've posted and linked so far under __{tag}__.
    </Markdown>

    <BlogPreviewList posts={collection.data} />
    <hr class="my-1" />
        <div class="pagination">
            {collection.url.prev && <a href={collection.url.prev} title="previous">&larr; &nbsp; Previous</a>}
            {collection.url.next && <a href={collection.url.next} title="next">Next&nbsp; &rarr;</a>}
        </div>
    <br/>
</Page>
